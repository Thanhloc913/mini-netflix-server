version: "3.9"

services:
  # === DATABASE ===
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mini-netflix
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-net

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: my_pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - app-net

  # === REDIS ===
  redis:
    image: redis:7-alpine
    container_name: redis_app
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-net

  # === AUTH SERVICE ===
  auth-service:
    build:
      context: .
      dockerfile: ./auth-service/Dockerfile
    container_name: auth_app
    restart: always
    depends_on:
      - postgres
      - redis
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: mini-netflix
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: supersecret
    ports:
      - "3001:3000"   # REST
      - "50051:50051" # gRPC
    networks:
      - app-net

  # === FILE SERVICE ===
  file-service:
    build:
      context: .
      dockerfile: ./file-service/Dockerfile
    container_name: file_app
    restart: always
    environment:
      AZURE_STORAGE_CONNECTION_STRING: ${AZURE_STORAGE_CONNECTION_STRING}
      AZURE_STORAGE_CONTAINER: ${AZURE_STORAGE_CONTAINER}
    ports:
      - "50052:50052" # gRPC only
    networks:
      - app-net

  # === GATEWAY ===
  gateway:
    build: ./gateway
    container_name: gateway_app
    restart: always
    depends_on:
      - auth-service
      - file-service
      - redis
    environment:
      AUTH_SERVICE_URL: grpc://auth-service:50051
      FILE_SERVICE_URL: grpc://file-service:50052
      MOVIE_SERVICE_URL: http://movie-service:3000
      COMMENT_SERVICE_URL: http://comment-service:3000
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: supersecret
    ports:
      - "3000:3000"
    networks:
      - app-net

networks:
  app-net:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
